# backend
upstream backend {
    server spring-boot-app:8000;  # 스프링 부트 백엔드의 컨테이너 이름
}

server {
    listen 80;
    server_name i11d101.p.ssafy.io;

    # HTTP 요청을 HTTPS로 리다이렉트
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;  # SSL 사용
    server_name i11d101.p.ssafy.io;

    # SSL 인증서 및 개인 키 경로 설정
    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    # CORS 헤더 추가
    add_header 'Access-Control-Allow-Origin' '*';
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
    add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

    # /ty/ty2/ 경로는 API 서비스
    location /ty/ty2/ {
        proxy_pass http://backend/;  # 스프링 부트 백엔드로 프록시
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 잘못된 요청에 대한 처리
    location / {
        return 404;  # 잘못된 요청에 대한 처리
    }
}

server {
    listen 3000 ssl;  # SSL 사용
    server_name i11d101.p.ssafy.io;

    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    root /usr/share/nginx/html;
    location / {
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location ~ .(static)/(jslcsslmedia)/(.+)$ {
        try_files $uri $uri/ /$1/$2/$3;
    }
}

server {
    listen 3001 ssl;  # SSL 사용
    server_name i11d101.p.ssafy.io;

    ssl_certificate /etc/ssl/certs/fullchain.pem;
    ssl_certificate_key /etc/ssl/private/privkey.pem;

    root /usr/share/nginx/html;
    location / {
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    location ~ .(static)/(jslcsslmedia)/(.+)$ {
        try_files $uri $uri/ /$1/$2/$3;
    }
}
